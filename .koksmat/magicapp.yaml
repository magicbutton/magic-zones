name: zones
type: magicservice
namezone: apps
organisation: magicbutton
magicappversion: v0.0.1
description: |
  Central application for managing the Magic Zones: access, jobs, deployments etc.
react:
  templates:
    formfield: &formfield
      markup: |
        <FormField
         control={form.control}
         name="##NAME##"
         render={({ field }) => (
           <FormItem>
             <FormLabel>##LABEL##</FormLabel>
             <FormControl>
               ##FORMCONTROL##
             </FormControl>
             <FormDescription>
               ##DESCRIPTION##
             </FormDescription>
             <FormMessage />
           </FormItem>
         )}
        />
  components:
    stringformfield: &StringFormField
      name: formfield
      template: *formfield
      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />

    numberformfield: &NumberFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    intformfield: &IntFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    datetimeformfield: &DateTimeFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    booleanformfield: &BooleanFormField
      name: formfield
      template: *formfield
      markup: |
        <div>Boolean not implemented</div>
      # markup: |
      #   <Input placeholder="##PLACEHOLDER##" {...field} />
    arrayformfield: &ArrayFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    lookupformfield: &LookupFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    referenceformfield: &ReferenceFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />

    jsonformfield: &JSONFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    viewitem: &ViewItem
      name: viewitem
      markup: |
        export function ViewItem<T>(props: {caption:string, value:T}) {
        const {caption, value} = props;
        return (
        <div>
          <div className="font-bold">{caption}</h1>
          <div >{value}</h1>
        </div>
        )
        }
    formitem: &EditItem
      name: formitem
      markup: |
        export function EditItem<T>(props: { caption:string, FormField : FormFieldType<T>, value:T, onChange: (value:T) => void}) {
        const {caption, value,ForField} = props;
        return (
        <div>
          <div className="font-bold">{caption}</h1>
          <div ><FormField<T> onChange={onChange} value={value} /></h1>
        </div>
        )
        }
defaults:
  viewitem: *ViewItem
  edititem: *EditItem
  primitive:
    json:
      formfield: *JSONFormField

    string:
      formfield: *StringFormField
    number:
      formfield: *NumberFormField
    datetime:
      formfield: *DateTimeFormField
    int:
      formfield: *IntFormField
    boolean:
      formfield: *BooleanFormField
    array:
      formfield: *ArrayFormField
    reference:
      formfield: *LookupFormField
baseattributes:
  urlrecord:
    &recordAttributesWithURL # Id + Created + Updated + CreatedBy + UpdatedBy are implicit
    - name: tenant
      type: string
      required: true
    - name: name
      type: string
      required: true
    - name: searchindex
      type: string
      displayname: Search Index
      description: |
        Search Index is used for concatenating all searchable fields in a single field making in easier to search
      hidden: true
      required: true

    - name: description
      type: string
      required: false
    - name: url
      type: string
      required: true
  record:
    &recordAttributes # Id + Created + Updated + CreatedBy + UpdatedBy are implicit
    - name: tenant
      type: string
      displayname: Tenant
      hidden: true
      required: true
    - name: searchindex
      type: string
      displayname: Search Index
      description: |
        Search Index is used for concatenating all searchable fields in a single field making in easier to search
      hidden: true
      required: true
    - name: name
      type: string
      displayname: Name
      required: true
    - name: description
      displayname: Description
      type: string
      required: false

entities:
  person: &person
    name: person
    description: person
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: unique_person_id
        type: string
        required: true
      - name: displayname
        type: string
        required: true
      - name: email
        type: string
        required: true

  zonetype: &zonetype
    name: zonetype
    description: zonetype
    baselineattributes: *recordAttributes
    additionalattributes:

  zone: &zone
    name: zone
    description: zone
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: unique_zone_id
        type: string
        required: true
      - name: zonetype
        type: reference
        entity: *zonetype
        required: true
      - name: primaryowner
        type: reference
        entity: *person
        required: true
      - name: secondaryowner
        type: reference
        entity: *person
        required: false
      - name: accountable
        type: reference
        entity: *person
        required: false
  jobtype: &jobtype
    name: jobtype
    description: jobtype
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: unique_jobtype_id
        type: string
        required: true
      - name: zone
        type: array
        entity: *zone
        required: false
      - name: arg0
        type: string
        required: false
      - name: arg1
        type: string
        required: false
      - name: arg2
        type: string
        required: false
      - name: arg3
        type: string
        required: false
      - name: arg4
        type: string
        required: false
      - name: arg5
        type: string
        required: false
      - name: arg6
        type: string
        required: false
      - name: arg7
        type: string
        required: false
      - name: arg8
        type: string
        required: false
      - name: arg9
        type: string
        required: false
      - name: bodytemplate
        type: string
        required: false

  job: &job
    name: job
    description: job
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: unique_job_id
        type: string
        required: true
      - name: jobtype
        type: reference
        entity: *jobtype
        required: true
      - name: zone
        type: reference
        entity: *zone
        required: true
      - name: person
        type: reference
        entity: *person
        required: true
      - name: startdate
        type: datetime
        required: true
      - name: enddate
        type: datetime
        required: false
      - name: status
        type: string
        required: true
      - name: notes
        type: string
        required: false
  service: &service
    name: service
    description: service
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: unique_service_id
        type: string
        required: true
      - name: service
        type: string
        required: true
  key: &key
    name: key
    description: key
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: unique_key_id
        type: string
        required: true
      - name: key
        type: string
        required: true
  issuedtoken: &issuedtoken
    name: issuedtoken
    description: issuedtoken
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: issuedFor
        description: |
          The service which the token has been issued for
        type: string
        required: true
      - name: issuedToUPN
        type: string
        required: true
  package: &package
    name: package
    description: package
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: version
        type: string
        required: true
      - name: url
        type: string
        required: true
      - name: checksum
        type: string
        required: true
      - name: status
        type: string
        required: true
      - name: notes
        type: string
        required: false

models:
  itemMethods: &itemMethods
    - name: read
      description: Read a single item
      parameters:
        - name: id
          description: The id of the item
          type: int
          required: true
      returns:
        type: object

    - name: create
      description: Create a new item
      parameters:
        - name: item
          description: The item to create
          type: object
          required: true
      returns:
        type: object
    - name: update
      description: Update an existing item
      parameters:
        - name: item
          description: The item to update
          type: object
          required: true
      returns:
        type: object

    - name: delete
      description: Delete an existing item
      parameters:
        - name: id
          description: The id of the item
          type: int
          required: true
      returns:
        type: void
    - name: search
      description: Search for items
      parameters:
        - name: query
          description: The search query
          type: string
          required: true

      returns:
        type: page

services:
  - name: person
    description: Manage persons
    entity:
      type: record
      model: person
      objectname: Person
      entity: *person
    methods: *itemMethods

  - name: zonetype
    description: Manage zone types
    entity:
      type: record
      model: zonetype
      objectname: ZoneType
      entity: *zonetype
    methods: *itemMethods

  - name: zone
    description: Manage zones
    entity:
      type: record
      model: zone
      objectname: Zone
      entity: *zone
    methods: *itemMethods

  - name: jobtype
    description: Manage job types
    entity:
      type: record
      model: jobtype
      objectname: JobType
      entity: *jobtype
    methods: *itemMethods

  - name: job
    description: Manage jobs
    entity:
      type: record
      model: job
      objectname: Job
      entity: *job
    methods: *itemMethods

  - name: service
    description: Manage services
    entity:
      type: record
      model: service
      objectname: Service
      entity: *service
    methods: *itemMethods

  - name: key
    description: Manage keys
    entity:
      type: record
      model: key
      objectname: Key
      entity: *key
    methods: *itemMethods
